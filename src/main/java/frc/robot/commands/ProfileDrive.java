package frc.robot.commands;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

import edu.wpi.first.wpilibj.Filesystem;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;
import frc.robot.RobotMap;
import frc.robot.MotionProfiling.DCMotorTransmission;
import frc.robot.MotionProfiling.DifferentialDrivePeter;


public class ProfileDrive extends Command {
	
	 double mass = 40.0; // kg
	 double moi = 20.0; // kg * m^2   //this is a number 254 code had, I figure it's close-ish. Definitely need tuning. Trying to account for scrub with this, not so great
	 double wheelRadiusMeters = 0.0762; // m 
	 double wheelBaseWidth = 0.8128; // m   //this is the effective wheel base width empirically 4/3 that of the physical wheel base width (24in --> 32in)
	 double vIntercept = 0.67; //0.67 // V
	 double R = 0.09160305; // ohms
	 double kv = 46.51333;   // rad/s per V 
	 double kt = 0.0183969466;   // N*m per A
	 double g = 10.71; // gear reduction (g:1)
	 int nMotors = 2; //number of motors in a gearbox

	 double dt = 0.02;

	public double kPPos;//2.0;
	public double kPVel = 2.0;//2.0;
	public double kPAng;//4.5;
	public double kPAngVel = 2.0;//2.0;

	public String fileName;
	
    public ProfileDrive(String file, double kpAng, double kpPos) {
        // Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);
		this.fileName = file;
		this.kPAng = kpAng;
		this.kPPos = kpPos;
    	requires(Robot.getDtSubsystem());
    }
    ArrayList<Double> voltagesLeft;
	ArrayList<Double> voltagesRight;
	ArrayList<Double> poses;
	ArrayList<Double> vels;
	ArrayList<Double> angs;
	ArrayList<Double> angVels;
	
	DifferentialDrivePeter DD;
	
	Scanner profileReader;
	int index = 0;

	double disp, vel, ang, angVel;
    // Called just before this Command runs the first time
    protected void initialize() {
		voltagesLeft = new ArrayList<>();
		voltagesRight = new ArrayList<>();
		poses = new ArrayList<>();
		vels = new ArrayList<>();
		angs = new ArrayList<>();
		angVels = new ArrayList<>();
		voltagesLeft.clear();
		voltagesRight.clear();
		poses.clear();
		vels.clear();
		angs.clear();
		angVels.clear();
		Robot.getDtSubsystem().resetEncoders();
		//System.out.println("in init");
		// String file = Filesystem.getDeployDirectory().getPath() + "/"+this.fileName + ".BOND";
    	// DD = new DifferentialDrivePeter(mass, wheelRadiusMeters, wheelBaseWidth, moi,
    	// 		new DCMotorTransmission(kv, kt, vIntercept,  R, g, nMotors), 
    	// 		new DCMotorTransmission(kv, kt, vIntercept,  R, g, nMotors));    	
    	// try {
    	// 	profileReader = new Scanner(new FileInputStream(file));
    	// 	while(profileReader.hasNextLine()) {
		// 		String [] line = profileReader.nextLine().split(" ");
    	// 		double voltRight = Double.parseDouble(line[0]);
		// 		double voltLeft = Double.parseDouble(line[1]);
		// 		disp = Double.parseDouble(line[2]);
		// 		vel = Double.parseDouble(line[3]);
		// 		ang = Double.parseDouble(line[4]);
		// 		angVel = Double.parseDouble(line[5]);
    	// 		voltagesRight.add(voltRight);
		// 		voltagesLeft.add(voltLeft);
		// 		poses.add(disp);
		// 		vels.add(vel);
		// 		angs.add(ang);
    	// 		angVels.add(angVel);
    	// 	}
    	// } catch(FileNotFoundException e) {
    	// 	e.printStackTrace();
		// }
		
		//use this one
		
		
		if (this.fileName.equals("hatch1ToLoadRAlt")){
			voltagesLeft = new ArrayList(
				Arrays.asList(-3.6936, -3.9063, -4.1195, -4.3332, -4.5474, -4.7618, -4.9764, -5.1907, -5.4046, -5.6176, -5.8291, -6.0387, -6.2457, -6.4494, -6.6489, -6.8435, -7.0322, -7.2143, -7.3888, -7.5549, -7.7146, -7.8622, -7.9994, -8.1261, -8.2420, -8.3512, -8.4463, -8.5358, -8.6163, -8.6929, -8.7578, -8.8207, -8.8826, -8.9358, -8.9939, -9.0452, -9.0988, -9.1551, -9.2108, -9.2701, -9.3297, -9.3934, -9.4610, -9.5298, -9.6026, -9.6768, -9.7550, -9.8369, -9.9202, -10.0070, -8.7295, -8.6887, -8.6505, -8.6155, -8.5825, -8.5512, -8.5216, -8.4943, -8.4681, -8.4431, -8.4190, -8.3958, -8.3734, -8.3523, -8.3316, -8.3109, -8.2910, -8.2715, -8.2521, -8.2328, -8.2136, -8.1943, -8.1750, -8.1548, -8.1349, -8.1147, -8.0940, -7.1345, -6.9792, -6.8248, -6.6711, -6.5183, -6.3661, -6.2148, -6.0645, -5.9149, -5.7661, -5.6183, -5.4716, -5.3258, -5.1811, -5.0374, -4.8950, -4.7537, -4.6137, -4.4750, -4.3376, -4.2016, -4.0670, -3.9339, -3.8023, -3.6720, -3.5435, -3.4162, -3.2906, -3.1663, -3.0433, -2.9220, -2.8019, -2.6829, -2.5648, -2.4484, -2.3327, -2.2176, -2.1030, -1.9887, -1.8756, -1.7613, -1.6480, -1.5343, -1.4202, -1.3067, -1.1909, -1.0755, -0.9572, -0.8392, 0.6205)
			);
			voltagesRight = new ArrayList(
				Arrays.asList(0.2801, 0.1906, 0.1016, 0.0132, -0.0748, -0.1626, -0.2502, -0.3380, -0.4263, -0.5155, -0.6061, -0.6987, -0.7939, -0.8924, -0.9951, -1.1026, -1.2161, -1.3362, -1.4638, -1.5999, -1.7423, -1.8970, -2.0619, -2.2374, -2.4237, -2.6166, -2.8237, -3.0364, -3.2581, -3.4837, -3.7209, -3.9602, -4.2005, -4.4495, -4.6935, -4.9444, -5.1930, -5.4388, -5.6853, -5.9282, -6.1707, -6.4093, -6.6438, -6.8772, -7.1066, -7.3345, -7.5585, -7.7787, -7.9976, -8.2130, -7.7192, -7.7600, -7.7982, -7.8332, -7.8662, -7.8975, -7.9271, -7.9544, -7.9806, -8.0056, -8.0297, -8.0528, -8.0753, -8.0964, -8.1171, -8.1378, -8.1577, -8.1772, -8.1966, -8.2159, -8.2351, -8.2544, -8.2737, -8.2939, -8.3138, -8.3340, -8.3547, -7.2407, -7.0938, -6.9460, -6.7976, -6.6482, -6.4982, -6.3473, -6.1955, -6.0429, -5.8896, -5.7352, -5.5797, -5.4233, -5.2659, -5.1073, -4.9476, -4.7867, -4.6245, -4.4611, -4.2963, -4.1301, -3.9625, -3.7935, -3.6229, -3.4511, -3.2773, -3.1025, -2.9259, -2.7480, -2.5689, -2.3880, -2.2059, -2.0227, -1.8386, -1.6529, -1.4664, -1.2793, -1.0918, -0.9039, -0.7148, -0.5270, -0.3381, -0.1495, 0.0384, 0.2272, 0.4135, 0.6003, 0.7842, 0.9684, 2.4909)
			);
			poses = new ArrayList(
				Arrays.asList(-0.0010, -0.0030, -0.0060, -0.0100, -0.0150, -0.0210, -0.0280, -0.0360, -0.0450, -0.0550, -0.0660, -0.0780, -0.0910, -0.1050, -0.1200, -0.1360, -0.1530, -0.1710, -0.1900, -0.2100, -0.2310, -0.2530, -0.2760, -0.3000, -0.3250, -0.3510, -0.3780, -0.4060, -0.4350, -0.4650, -0.4960, -0.5280, -0.5610, -0.5950, -0.6300, -0.6660, -0.7030, -0.7410, -0.7800, -0.8200, -0.8610, -0.9030, -0.9460, -0.9900, -1.0350, -1.0810, -1.1280, -1.1760, -1.2250, -1.2750, -1.3250, -1.3750, -1.4250, -1.4750, -1.5250, -1.5750, -1.6250, -1.6750, -1.7250, -1.7750, -1.8250, -1.8750, -1.9250, -1.9750, -2.0250, -2.0750, -2.1250, -2.1750, -2.2250, -2.2750, -2.3250, -2.3750, -2.4250, -2.4750, -2.5250, -2.5750, -2.6250, -2.6740, -2.7220, -2.7690, -2.8150, -2.8600, -2.9040, -2.9470, -2.9890, -3.0300, -3.0700, -3.1090, -3.1470, -3.1840, -3.2200, -3.2550, -3.2890, -3.3220, -3.3540, -3.3850, -3.4150, -3.4440, -3.4720, -3.4990, -3.5250, -3.5500, -3.5740, -3.5970, -3.6190, -3.6400, -3.6600, -3.6790, -3.6970, -3.7140, -3.7300, -3.7450, -3.7590, -3.7720, -3.7840, -3.7950, -3.8050, -3.8140, -3.8220, -3.8290, -3.8350, -3.8400, -3.8440, -3.8470, -3.8490, -3.8500, -3.8500)
			);
			vels = new ArrayList(
				Arrays.asList(-0.0500, -0.1000, -0.1500, -0.2000, -0.2500, -0.3000, -0.3500, -0.4000, -0.4500, -0.5000, -0.5500, -0.6000, -0.6500, -0.7000, -0.7500, -0.8000, -0.8500, -0.9000, -0.9500, -1.0000, -1.0500, -1.1000, -1.1500, -1.2000, -1.2500, -1.3000, -1.3500, -1.4000, -1.4500, -1.5000, -1.5500, -1.6000, -1.6500, -1.7000, -1.7500, -1.8000, -1.8500, -1.9000, -1.9500, -2.0000, -2.0500, -2.1000, -2.1500, -2.2000, -2.2500, -2.3000, -2.3500, -2.4000, -2.4500, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.4500, -2.4000, -2.3500, -2.3000, -2.2500, -2.2000, -2.1500, -2.1000, -2.0500, -2.0000, -1.9500, -1.9000, -1.8500, -1.8000, -1.7500, -1.7000, -1.6500, -1.6000, -1.5500, -1.5000, -1.4500, -1.4000, -1.3500, -1.3000, -1.2500, -1.2000, -1.1500, -1.1000, -1.0500, -1.0000, -0.9500, -0.9000, -0.8500, -0.8000, -0.7500, -0.7000, -0.6500, -0.6000, -0.5500, -0.5000, -0.4500, -0.4000, -0.3500, -0.3000, -0.2500, -0.2000, -0.1500, -0.1000, -0.0500, 0.0000)
			);
			angs = new ArrayList(
				Arrays.asList(-0.1972, -0.1945, -0.1904, -0.1850, -0.1783, -0.1702, -0.1607, -0.1499, -0.1378, -0.1243, -0.1096, -0.0935, -0.0762, -0.0577, -0.0379, -0.0170, 0.0050, 0.0280, 0.0521, 0.0757, 0.1015, 0.1280, 0.1551, 0.1827, 0.2096, 0.2379, 0.2654, 0.2930, 0.3196, 0.3471, 0.3735, 0.3988, 0.4247, 0.4486, 0.4729, 0.4960, 0.5180, 0.5394, 0.5597, 0.5795, 0.5982, 0.6158, 0.6328, 0.6489, 0.6644, 0.6789, 0.6925, 0.7055, 0.7177, 0.7293, 0.7398, 0.7495, 0.7583, 0.7664, 0.7738, 0.7807, 0.7867, 0.7923, 0.7973, 0.8018, 0.8058, 0.8093, 0.8123, 0.8148, 0.8170, 0.8186, 0.8199, 0.8207, 0.8211, 0.8210, 0.8206, 0.8197, 0.8184, 0.8167, 0.8146, 0.8120, 0.8089, 0.8054, 0.8016, 0.7973, 0.7927, 0.7877, 0.7825, 0.7769, 0.7710, 0.7646, 0.7580, 0.7513, 0.7441, 0.7368, 0.7290, 0.7211, 0.7129, 0.7045, 0.6961, 0.6873, 0.6781, 0.6693, 0.6602, 0.6507, 0.6417, 0.6319, 0.6227, 0.6133, 0.6040, 0.5950, 0.5857, 0.5767, 0.5680, 0.5597, 0.5513, 0.5432, 0.5356, 0.5285, 0.5220, 0.5153, 0.5099, 0.5044, 0.4996, 0.4953, 0.4911, 0.4882, 0.4854, 0.4839, 0.4825, 0.4818, 0.4818)
			);
			angVels = new ArrayList(
				Arrays.asList(-9.8595, 0.1352, 0.2028, 0.2704, 0.3379, 0.4053, 0.4726, 0.5396, 0.6062, 0.6723, 0.7377, 0.8022, 0.8655, 0.9274, 0.9874, 1.0452, 1.1004, 1.1526, 1.2014, 1.1845, 1.2881, 1.3241, 1.3551, 1.3807, 1.3454, 1.4165, 1.3728, 1.3788, 1.3308, 1.3758, 1.3207, 1.2662, 1.2943, 1.1956, 1.2151, 1.1549, 1.0968, 1.0724, 1.0152, 0.9887, 0.9332, 0.8801, 0.8532, 0.8023, 0.7746, 0.7258, 0.6794, 0.6523, 0.6080, 0.5806, 0.5246, 0.4863, 0.4380, 0.4047, 0.3728, 0.3421, 0.3042, 0.2771, 0.2508, 0.2253, 0.2004, 0.1762, 0.1484, 0.1264, 0.1074, 0.0827, 0.0615, 0.0405, 0.0196, -0.0012, -0.0221, -0.0430, -0.0662, -0.0858, -0.1072, -0.1289, -0.1558, -0.1741, -0.1910, -0.2131, -0.2283, -0.2502, -0.2639, -0.2760, -0.2970, -0.3187, -0.3293, -0.3384, -0.3592, -0.3667, -0.3874, -0.3933, -0.4138, -0.4179, -0.4203, -0.4396, -0.4596, -0.4395, -0.4574, -0.4758, -0.4491, -0.4890, -0.4583, -0.4738, -0.4635, -0.4512, -0.4645, -0.4497, -0.4328, -0.4140, -0.4239, -0.4026, -0.3794, -0.3545, -0.3279, -0.3333, -0.2706, -0.2742, -0.2428, -0.2103, -0.2124, -0.1427, -0.1437, -0.0722, -0.0724, -0.0363, 0.0000)
			);
		} else if(this.fileName.equals("LoadRToShip1Alt")){
			voltagesLeft = new ArrayList(
				Arrays.asList(-1.9378, -2.1437, -2.3496, -2.5555, -2.7614, -2.9672, -3.1731, -3.3790, -3.5849, -3.7908, -3.9967, -4.2026, -4.4084, -4.6143, -4.8202, -5.0261, -5.2321, -5.4380, -5.6439, -5.8498, -6.0558, -6.2617, -6.4677, -6.6737, -6.8797, -7.0857, -7.2917, -7.4978, -7.7038, -7.9099, -8.1161, -8.3222, -8.5284, -8.7346, -8.9409, -9.1472, -9.3535, -9.5599, -9.7663, -9.9728, -10.1793, -10.3859, -10.5926, -9.5278, -9.5282, -9.5287, -9.5291, -9.5296, -9.5301, -9.5307, -9.5312, -9.5318, -9.5323, -9.5329, -9.5335, -9.5342, -9.5348, -9.5354, -9.5361, -9.5368, -9.5375, -9.5382, -9.5389, -9.5396, -9.5404, -9.5411, -9.5419, -9.5426, -9.5434, -9.5442, -9.5450, -9.5459, -9.5467, -9.5475, -9.5484, -9.5492, -9.5501, -9.5510, -9.5518, -9.5527, -9.5536, -9.5545, -9.5554, -9.5564, -9.5573, -9.5582, -9.5591, -9.5601, -9.5610, -9.5620, -9.5629, -9.5639, -9.5648, -9.5658, -9.5668, -9.5677, -9.5687, -9.5697, -9.5707, -9.5717, -9.5726, -9.5736, -9.5746, -9.5756, -9.5766, -9.5776, -9.5786, -9.5796, -8.2690, -8.0620, -7.8550, -7.6479, -7.4407, -7.2335, -7.0263, -6.8190, -6.6117, -6.4043, -6.1969, -5.9895, -5.7820, -5.5745, -5.3670, -5.1594, -4.9519, -4.7442, -4.5366, -4.3290, -4.1213, -3.9136, -3.7059, -3.4982, -3.2904, -3.0827, -2.8749, -2.6672, -2.4594, -2.2516, -2.0438, -1.8360, -1.6282, -1.4204, -1.2126, -1.0049, -0.7971, -0.5893, -0.3815, -0.1738, 0.0339, 0.2417, 1.7894)
			);
			voltagesRight = new ArrayList(
				Arrays.asList(-2.3051, -2.5222, -2.7394, -2.9566, -3.1737, -3.3909, -3.6080, -3.8252, -4.0424, -4.2595, -4.4767, -4.6938, -4.9110, -5.1281, -5.3453, -5.5624, -5.7795, -5.9967, -6.2138, -6.4309, -6.6480, -6.8651, -7.0822, -7.2992, -7.5163, -7.7333, -7.9503, -8.1673, -8.3843, -8.6012, -8.8182, -9.0351, -9.2519, -9.4687, -9.6855, -9.9023, -10.1190, -10.3356, -10.5522, -10.7688, -10.9853, -11.2017, -11.4181, -10.0031, -10.0027, -10.0022, -10.0017, -10.0012, -10.0007, -10.0002, -9.9997, -9.9991, -9.9985, -9.9979, -9.9973, -9.9967, -9.9961, -9.9954, -9.9948, -9.9941, -9.9934, -9.9927, -9.9920, -9.9913, -9.9905, -9.9898, -9.9890, -9.9882, -9.9874, -9.9866, -9.9858, -9.9850, -9.9842, -9.9833, -9.9825, -9.9816, -9.9808, -9.9799, -9.9790, -9.9781, -9.9772, -9.9763, -9.9754, -9.9745, -9.9736, -9.9727, -9.9717, -9.9708, -9.9699, -9.9689, -9.9679, -9.9670, -9.9660, -9.9651, -9.9641, -9.9631, -9.9622, -9.9612, -9.9602, -9.9592, -9.9582, -9.9572, -9.9562, -9.9553, -9.9543, -9.9533, -9.9523, -9.9513, -8.3589, -8.1429, -7.9269, -7.7110, -7.4951, -7.2792, -7.0634, -6.8477, -6.6319, -6.4163, -6.2006, -5.9850, -5.7694, -5.5539, -5.3384, -5.1229, -4.9074, -4.6920, -4.4766, -4.2612, -4.0458, -3.8305, -3.6151, -3.3998, -3.1845, -2.9692, -2.7539, -2.5386, -2.3234, -2.1081, -1.8929, -1.6776, -1.4623, -1.2471, -1.0318, -0.8166, -0.6013, -0.3860, -0.1708, 0.0445, 0.2598, 0.4751, 2.0305)
			);
			poses = new ArrayList(
				Arrays.asList(-0.0014, -0.0042, -0.0084, -0.0140, -0.0210, -0.0294, -0.0392, -0.0504, -0.0630, -0.0770, -0.0924, -0.1092, -0.1274, -0.1470, -0.1680, -0.1904, -0.2142, -0.2394, -0.2660, -0.2940, -0.3234, -0.3542, -0.3864, -0.4200, -0.4550, -0.4914, -0.5292, -0.5684, -0.6090, -0.6510, -0.6944, -0.7392, -0.7854, -0.8330, -0.8820, -0.9324, -0.9842, -1.0374, -1.0920, -1.1480, -1.2054, -1.2642, -1.3244, -1.3846, -1.4448, -1.5050, -1.5652, -1.6254, -1.6856, -1.7458, -1.8060, -1.8662, -1.9264, -1.9866, -2.0468, -2.1070, -2.1672, -2.2274, -2.2876, -2.3478, -2.4080, -2.4682, -2.5284, -2.5886, -2.6488, -2.7090, -2.7692, -2.8294, -2.8896, -2.9498, -3.0100, -3.0702, -3.1304, -3.1906, -3.2508, -3.3110, -3.3712, -3.4314, -3.4916, -3.5518, -3.6120, -3.6722, -3.7324, -3.7926, -3.8528, -3.9130, -3.9732, -4.0334, -4.0936, -4.1538, -4.2140, -4.2742, -4.3344, -4.3946, -4.4548, -4.5150, -4.5752, -4.6354, -4.6956, -4.7558, -4.8160, -4.8762, -4.9364, -4.9966, -5.0568, -5.1170, -5.1772, -5.2374, -5.2962, -5.3536, -5.4096, -5.4642, -5.5174, -5.5692, -5.6196, -5.6686, -5.7162, -5.7624, -5.8072, -5.8506, -5.8926, -5.9332, -5.9724, -6.0102, -6.0466, -6.0816, -6.1152, -6.1474, -6.1782, -6.2076, -6.2356, -6.2622, -6.2874, -6.3112, -6.3336, -6.3546, -6.3742, -6.3924, -6.4092, -6.4246, -6.4386, -6.4512, -6.4624, -6.4722, -6.4806, -6.4876, -6.4932, -6.4974, -6.5002, -6.5016, -6.5016)
			);
			vels = new ArrayList(
				Arrays.asList(-0.0700, -0.1400, -0.2100, -0.2800, -0.3500, -0.4200, -0.4900, -0.5600, -0.6300, -0.7000, -0.7700, -0.8400, -0.9100, -0.9800, -1.0500, -1.1200, -1.1900, -1.2600, -1.3300, -1.4000, -1.4700, -1.5400, -1.6100, -1.6800, -1.7500, -1.8200, -1.8900, -1.9600, -2.0300, -2.1000, -2.1700, -2.2400, -2.3100, -2.3800, -2.4500, -2.5200, -2.5900, -2.6600, -2.7300, -2.8000, -2.8700, -2.9400, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -3.0100, -2.9400, -2.8700, -2.8000, -2.7300, -2.6600, -2.5900, -2.5200, -2.4500, -2.3800, -2.3100, -2.2400, -2.1700, -2.1000, -2.0300, -1.9600, -1.8900, -1.8200, -1.7500, -1.6800, -1.6100, -1.5400, -1.4700, -1.4000, -1.3300, -1.2600, -1.1900, -1.1200, -1.0500, -0.9800, -0.9100, -0.8400, -0.7700, -0.7000, -0.6300, -0.5600, -0.4900, -0.4200, -0.3500, -0.2800, -0.2100, -0.1400, -0.0700, 0.0000)
			);
			angs = new ArrayList(
				Arrays.asList(0.0018, 0.0020, 0.0024, 0.0028, 0.0034, 0.0042, 0.0051, 0.0061, 0.0071, 0.0083, 0.0097, 0.0112, 0.0128, 0.0145, 0.0163, 0.0183, 0.0204, 0.0226, 0.0249, 0.0273, 0.0299, 0.0327, 0.0354, 0.0383, 0.0414, 0.0446, 0.0479, 0.0513, 0.0548, 0.0585, 0.0622, 0.0662, 0.0702, 0.0744, 0.0786, 0.0830, 0.0874, 0.0920, 0.0968, 0.1015, 0.1065, 0.1116, 0.1167, 0.1219, 0.1270, 0.1322, 0.1373, 0.1424, 0.1475, 0.1526, 0.1577, 0.1627, 0.1678, 0.1728, 0.1779, 0.1829, 0.1879, 0.1929, 0.1979, 0.2028, 0.2078, 0.2127, 0.2176, 0.2225, 0.2274, 0.2323, 0.2371, 0.2419, 0.2467, 0.2515, 0.2563, 0.2611, 0.2658, 0.2705, 0.2752, 0.2799, 0.2846, 0.2892, 0.2938, 0.2985, 0.3030, 0.3077, 0.3122, 0.3167, 0.3212, 0.3257, 0.3301, 0.3346, 0.3390, 0.3435, 0.3479, 0.3522, 0.3566, 0.3609, 0.3652, 0.3694, 0.3737, 0.3779, 0.3822, 0.3864, 0.3906, 0.3948, 0.3988, 0.4029, 0.4071, 0.4111, 0.4152, 0.4192, 0.4231, 0.4269, 0.4306, 0.4342, 0.4376, 0.4410, 0.4442, 0.4474, 0.4504, 0.4534, 0.4562, 0.4590, 0.4616, 0.4641, 0.4666, 0.4690, 0.4712, 0.4734, 0.4754, 0.4774, 0.4793, 0.4811, 0.4828, 0.4844, 0.4859, 0.4874, 0.4887, 0.4900, 0.4912, 0.4923, 0.4933, 0.4942, 0.4951, 0.4958, 0.4964, 0.4970, 0.4975, 0.4980, 0.4983, 0.4985, 0.4987, 0.4988, 0.4988)
			);
			angVels = new ArrayList(
				Arrays.asList(0.0887, 0.0131, 0.0175, 0.0219, 0.0306, 0.0394, 0.0437, 0.0481, 0.0525, 0.0612, 0.0700, 0.0744, 0.0787, 0.0831, 0.0919, 0.1006, 0.1050, 0.1093, 0.1137, 0.1224, 0.1311, 0.1355, 0.1398, 0.1442, 0.1529, 0.1616, 0.1615, 0.1746, 0.1745, 0.1832, 0.1874, 0.1961, 0.2003, 0.2089, 0.2131, 0.2173, 0.2215, 0.2300, 0.2385, 0.2383, 0.2510, 0.2507, 0.2591, 0.2588, 0.2542, 0.2581, 0.2578, 0.2531, 0.2570, 0.2524, 0.2562, 0.2516, 0.2554, 0.2507, 0.2503, 0.2541, 0.2494, 0.2489, 0.2484, 0.2479, 0.2474, 0.2469, 0.2422, 0.2458, 0.2453, 0.2447, 0.2400, 0.2436, 0.2389, 0.2383, 0.2418, 0.2371, 0.2365, 0.2359, 0.2353, 0.2347, 0.2341, 0.2294, 0.2328, 0.2321, 0.2275, 0.2308, 0.2262, 0.2255, 0.2249, 0.2242, 0.2235, 0.2228, 0.2221, 0.2214, 0.2207, 0.2162, 0.2193, 0.2148, 0.2141, 0.2134, 0.2127, 0.2120, 0.2113, 0.2106, 0.2099, 0.2091, 0.2047, 0.2040, 0.2070, 0.2026, 0.2018, 0.2011, 0.1968, 0.1888, 0.1846, 0.1803, 0.1726, 0.1684, 0.1608, 0.1603, 0.1491, 0.1487, 0.1412, 0.1373, 0.1334, 0.1261, 0.1223, 0.1185, 0.1113, 0.1110, 0.1004, 0.1002, 0.0931, 0.0895, 0.0859, 0.0823, 0.0753, 0.0718, 0.0683, 0.0614, 0.0613, 0.0544, 0.0509, 0.0441, 0.0441, 0.0372, 0.0305, 0.0304, 0.0237, 0.0236, 0.0169, 0.0101, 0.0101, 0.0034, 0.0000)
			);
		} else if(this.fileName.equals("LoadRToShip1Alt2")){
			voltagesLeft = new ArrayList(
				Arrays.asList(-3.6936, -3.9063, -4.1195, -4.3332, -4.5474, -4.7618, -4.9764, -5.1907, -5.4046, -5.6176, -5.8291, -6.0387, -6.2457, -6.4494, -6.6489, -6.8435, -7.0322, -7.2143, -7.3888, -7.5549, -7.7146, -7.8622, -7.9994, -8.1261, -8.2420, -8.3512, -8.4463, -8.5358, -8.6163, -8.6929, -8.7578, -8.8207, -8.8826, -8.9358, -8.9939, -9.0452, -9.0988, -9.1551, -9.2108, -9.2701, -9.3297, -9.3934, -9.4610, -9.5298, -9.6026, -9.6768, -9.7550, -9.8369, -9.9202, -10.0070, -8.7295, -8.6887, -8.6505, -8.6155, -8.5825, -8.5512, -8.5216, -8.4943, -8.4681, -8.4431, -8.4190, -8.3958, -8.3734, -8.3523, -8.3316, -8.3109, -8.2910, -8.2715, -8.2521, -8.2328, -8.2136, -8.1943, -8.1750, -8.1548, -8.1349, -8.1147, -8.0940, -7.1345, -6.9792, -6.8248, -6.6711, -6.5183, -6.3661, -6.2148, -6.0645, -5.9149, -5.7661, -5.6183, -5.4716, -5.3258, -5.1811, -5.0374, -4.8950, -4.7537, -4.6137, -4.4750, -4.3376, -4.2016, -4.0670, -3.9339, -3.8023, -3.6720, -3.5435, -3.4162, -3.2906, -3.1663, -3.0433, -2.9220, -2.8019, -2.6829, -2.5648, -2.4484, -2.3327, -2.2176, -2.1030, -1.9887, -1.8756, -1.7613, -1.6480, -1.5343, -1.4202, -1.3067, -1.1909, -1.0755, -0.9572, -0.8392, 0.6205)
			);
			voltagesRight = new ArrayList(
				Arrays.asList(0.2801, 0.1906, 0.1016, 0.0132, -0.0748, -0.1626, -0.2502, -0.3380, -0.4263, -0.5155, -0.6061, -0.6987, -0.7939, -0.8924, -0.9951, -1.1026, -1.2161, -1.3362, -1.4638, -1.5999, -1.7423, -1.8970, -2.0619, -2.2374, -2.4237, -2.6166, -2.8237, -3.0364, -3.2581, -3.4837, -3.7209, -3.9602, -4.2005, -4.4495, -4.6935, -4.9444, -5.1930, -5.4388, -5.6853, -5.9282, -6.1707, -6.4093, -6.6438, -6.8772, -7.1066, -7.3345, -7.5585, -7.7787, -7.9976, -8.2130, -7.7192, -7.7600, -7.7982, -7.8332, -7.8662, -7.8975, -7.9271, -7.9544, -7.9806, -8.0056, -8.0297, -8.0528, -8.0753, -8.0964, -8.1171, -8.1378, -8.1577, -8.1772, -8.1966, -8.2159, -8.2351, -8.2544, -8.2737, -8.2939, -8.3138, -8.3340, -8.3547, -7.2407, -7.0938, -6.9460, -6.7976, -6.6482, -6.4982, -6.3473, -6.1955, -6.0429, -5.8896, -5.7352, -5.5797, -5.4233, -5.2659, -5.1073, -4.9476, -4.7867, -4.6245, -4.4611, -4.2963, -4.1301, -3.9625, -3.7935, -3.6229, -3.4511, -3.2773, -3.1025, -2.9259, -2.7480, -2.5689, -2.3880, -2.2059, -2.0227, -1.8386, -1.6529, -1.4664, -1.2793, -1.0918, -0.9039, -0.7148, -0.5270, -0.3381, -0.1495, 0.0384, 0.2272, 0.4135, 0.6003, 0.7842, 0.9684, 2.4909)
			);
			poses = new ArrayList(
				Arrays.asList(-0.0010, -0.0030, -0.0060, -0.0100, -0.0150, -0.0210, -0.0280, -0.0360, -0.0450, -0.0550, -0.0660, -0.0780, -0.0910, -0.1050, -0.1200, -0.1360, -0.1530, -0.1710, -0.1900, -0.2100, -0.2310, -0.2530, -0.2760, -0.3000, -0.3250, -0.3510, -0.3780, -0.4060, -0.4350, -0.4650, -0.4960, -0.5280, -0.5610, -0.5950, -0.6300, -0.6660, -0.7030, -0.7410, -0.7800, -0.8200, -0.8610, -0.9030, -0.9460, -0.9900, -1.0350, -1.0810, -1.1280, -1.1760, -1.2250, -1.2750, -1.3250, -1.3750, -1.4250, -1.4750, -1.5250, -1.5750, -1.6250, -1.6750, -1.7250, -1.7750, -1.8250, -1.8750, -1.9250, -1.9750, -2.0250, -2.0750, -2.1250, -2.1750, -2.2250, -2.2750, -2.3250, -2.3750, -2.4250, -2.4750, -2.5250, -2.5750, -2.6250, -2.6740, -2.7220, -2.7690, -2.8150, -2.8600, -2.9040, -2.9470, -2.9890, -3.0300, -3.0700, -3.1090, -3.1470, -3.1840, -3.2200, -3.2550, -3.2890, -3.3220, -3.3540, -3.3850, -3.4150, -3.4440, -3.4720, -3.4990, -3.5250, -3.5500, -3.5740, -3.5970, -3.6190, -3.6400, -3.6600, -3.6790, -3.6970, -3.7140, -3.7300, -3.7450, -3.7590, -3.7720, -3.7840, -3.7950, -3.8050, -3.8140, -3.8220, -3.8290, -3.8350, -3.8400, -3.8440, -3.8470, -3.8490, -3.8500, -3.8500)
			);
			vels = new ArrayList(
				Arrays.asList(-0.0500, -0.1000, -0.1500, -0.2000, -0.2500, -0.3000, -0.3500, -0.4000, -0.4500, -0.5000, -0.5500, -0.6000, -0.6500, -0.7000, -0.7500, -0.8000, -0.8500, -0.9000, -0.9500, -1.0000, -1.0500, -1.1000, -1.1500, -1.2000, -1.2500, -1.3000, -1.3500, -1.4000, -1.4500, -1.5000, -1.5500, -1.6000, -1.6500, -1.7000, -1.7500, -1.8000, -1.8500, -1.9000, -1.9500, -2.0000, -2.0500, -2.1000, -2.1500, -2.2000, -2.2500, -2.3000, -2.3500, -2.4000, -2.4500, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.5000, -2.4500, -2.4000, -2.3500, -2.3000, -2.2500, -2.2000, -2.1500, -2.1000, -2.0500, -2.0000, -1.9500, -1.9000, -1.8500, -1.8000, -1.7500, -1.7000, -1.6500, -1.6000, -1.5500, -1.5000, -1.4500, -1.4000, -1.3500, -1.3000, -1.2500, -1.2000, -1.1500, -1.1000, -1.0500, -1.0000, -0.9500, -0.9000, -0.8500, -0.8000, -0.7500, -0.7000, -0.6500, -0.6000, -0.5500, -0.5000, -0.4500, -0.4000, -0.3500, -0.3000, -0.2500, -0.2000, -0.1500, -0.1000, -0.0500, 0.0000)
			);
			angs = new ArrayList(
				Arrays.asList(-0.1972, -0.1945, -0.1904, -0.1850, -0.1783, -0.1702, -0.1607, -0.1499, -0.1378, -0.1243, -0.1096, -0.0935, -0.0762, -0.0577, -0.0379, -0.0170, 0.0050, 0.0280, 0.0521, 0.0757, 0.1015, 0.1280, 0.1551, 0.1827, 0.2096, 0.2379, 0.2654, 0.2930, 0.3196, 0.3471, 0.3735, 0.3988, 0.4247, 0.4486, 0.4729, 0.4960, 0.5180, 0.5394, 0.5597, 0.5795, 0.5982, 0.6158, 0.6328, 0.6489, 0.6644, 0.6789, 0.6925, 0.7055, 0.7177, 0.7293, 0.7398, 0.7495, 0.7583, 0.7664, 0.7738, 0.7807, 0.7867, 0.7923, 0.7973, 0.8018, 0.8058, 0.8093, 0.8123, 0.8148, 0.8170, 0.8186, 0.8199, 0.8207, 0.8211, 0.8210, 0.8206, 0.8197, 0.8184, 0.8167, 0.8146, 0.8120, 0.8089, 0.8054, 0.8016, 0.7973, 0.7927, 0.7877, 0.7825, 0.7769, 0.7710, 0.7646, 0.7580, 0.7513, 0.7441, 0.7368, 0.7290, 0.7211, 0.7129, 0.7045, 0.6961, 0.6873, 0.6781, 0.6693, 0.6602, 0.6507, 0.6417, 0.6319, 0.6227, 0.6133, 0.6040, 0.5950, 0.5857, 0.5767, 0.5680, 0.5597, 0.5513, 0.5432, 0.5356, 0.5285, 0.5220, 0.5153, 0.5099, 0.5044, 0.4996, 0.4953, 0.4911, 0.4882, 0.4854, 0.4839, 0.4825, 0.4818, 0.4818)
			);
			angVels = new ArrayList(
				Arrays.asList(-9.8595, 0.1352, 0.2028, 0.2704, 0.3379, 0.4053, 0.4726, 0.5396, 0.6062, 0.6723, 0.7377, 0.8022, 0.8655, 0.9274, 0.9874, 1.0452, 1.1004, 1.1526, 1.2014, 1.1845, 1.2881, 1.3241, 1.3551, 1.3807, 1.3454, 1.4165, 1.3728, 1.3788, 1.3308, 1.3758, 1.3207, 1.2662, 1.2943, 1.1956, 1.2151, 1.1549, 1.0968, 1.0724, 1.0152, 0.9887, 0.9332, 0.8801, 0.8532, 0.8023, 0.7746, 0.7258, 0.6794, 0.6523, 0.6080, 0.5806, 0.5246, 0.4863, 0.4380, 0.4047, 0.3728, 0.3421, 0.3042, 0.2771, 0.2508, 0.2253, 0.2004, 0.1762, 0.1484, 0.1264, 0.1074, 0.0827, 0.0615, 0.0405, 0.0196, -0.0012, -0.0221, -0.0430, -0.0662, -0.0858, -0.1072, -0.1289, -0.1558, -0.1741, -0.1910, -0.2131, -0.2283, -0.2502, -0.2639, -0.2760, -0.2970, -0.3187, -0.3293, -0.3384, -0.3592, -0.3667, -0.3874, -0.3933, -0.4138, -0.4179, -0.4203, -0.4396, -0.4596, -0.4395, -0.4574, -0.4758, -0.4491, -0.4890, -0.4583, -0.4738, -0.4635, -0.4512, -0.4645, -0.4497, -0.4328, -0.4140, -0.4239, -0.4026, -0.3794, -0.3545, -0.3279, -0.3333, -0.2706, -0.2742, -0.2428, -0.2103, -0.2124, -0.1427, -0.1437, -0.0722, -0.0724, -0.0363, 0.0000)
			);
		} else if(this.fileName.equals("LoadRToShip1Alt3")){
			voltagesRight = new ArrayList(
				Arrays.asList(-2.7366, -2.9666, -3.1964, -3.4258, -3.6550, -3.8836, -4.1117, -4.3393, -4.5665, -4.7932, -5.0192, -5.2444, -5.4690, -5.6929, -5.9163, -6.1386, -6.3599, -6.5804, -6.8001, -7.0189, -7.2365, -7.4527, -7.6684, -7.8827, -8.0955, -8.3073, -8.5180, -8.7276, -8.9357, -9.1426, -9.3478, -9.5520, -9.7550, -9.9568, -10.1570, -10.3561, -10.5536, -10.7505, -10.9458, -11.1401, -11.3328, -11.5251, -11.7160, -11.9058, -12.0948, -12.2824, -10.7621, -10.7430, -10.7246, -10.7065, -10.6887, -10.6712, -10.6539, -10.6369, -10.6204, -10.6039, -10.5879, -10.5721, -10.5564, -10.5407, -10.5254, -10.5102, -10.4954, -10.4805, -10.4657, -10.4509, -10.4362, -10.4218, -10.4071, -10.3925, -10.3779, -10.3634, -10.3487, -10.3340, -10.3191, -10.3042, -10.2894, -10.2742, -10.2589, -10.2432, -10.2276, -10.2117, -10.1957, -10.1792, -10.1627, -10.1457, -10.1284, -10.1109, -10.0930, -10.0749, -10.0565, -10.0375, -10.0184, -9.9987, -9.9787, -9.9584, -9.9378, -9.9165, -9.8953, -9.8734, -8.7881, -8.5826, -8.3781, -8.1747, -7.9722, -7.7706, -7.5701, -7.3705, -7.1719, -6.9740, -6.7771, -6.5810, -6.3856, -6.1909, -5.9969, -5.8036, -5.6108, -5.4185, -5.2267, -5.0354, -4.8444, -4.6538, -4.4634, -4.2732, -4.0833, -3.8935, -3.7039, -3.5145, -3.3250, -3.1356, -2.9463, -2.7570, -2.5677, -2.3783, -2.1890, -1.9996, -1.8101, -1.6206, -1.4311, -1.2415, -1.0518, -0.8620, -0.6722, -0.4823, -0.2922, 1.2379
				)
			);
			voltagesLeft = new ArrayList(
				Arrays.asList(-1.5063, -1.6993, -1.8926, -2.0862, -2.2801, -2.4745, -2.6695, -2.8649, -3.0608, -3.2571, -3.4541, -3.6520, -3.8505, -4.0495, -4.2492, -4.4499, -4.6517, -4.8543, -5.0576, -5.2618, -5.4673, -5.6741, -5.8814, -6.0902, -6.3004, -6.5117, -6.7240, -6.9375, -7.1525, -7.3686, -7.5864, -7.8053, -8.0253, -8.2465, -8.4694, -8.6933, -8.9189, -9.1450, -9.3727, -9.6015, -9.8318, -10.0626, -10.2948, -10.5279, -10.7620, -10.9974, -10.0379, -10.0570, -10.0754, -10.0935, -10.1113, -10.1289, -10.1461, -10.1631, -10.1796, -10.1961, -10.2121, -10.2280, -10.2436, -10.2593, -10.2746, -10.2898, -10.3046, -10.3195, -10.3343, -10.3491, -10.3638, -10.3782, -10.3929, -10.4075, -10.4221, -10.4366, -10.4513, -10.4660, -10.4809, -10.4958, -10.5106, -10.5258, -10.5411, -10.5568, -10.5725, -10.5883, -10.6043, -10.6208, -10.6373, -10.6543, -10.6716, -10.6891, -10.7070, -10.7251, -10.7435, -10.7626, -10.7816, -10.8013, -10.8213, -10.8416, -10.8622, -10.8835, -10.9047, -10.9266, -9.1090, -8.8915, -8.6729, -8.4533, -8.2328, -8.0112, -7.7887, -7.5653, -7.3409, -7.1157, -6.8896, -6.6627, -6.4350, -6.2066, -5.9775, -5.7479, -5.5176, -5.2868, -5.0556, -4.8239, -4.5918, -4.3594, -4.1268, -3.8939, -3.6607, -3.4275, -3.1940, -2.9605, -2.7268, -2.4932, -2.2595, -2.0257, -1.7920, -1.5583, -1.3246, -1.0910, -0.8574, -0.6239, -0.3904, -0.1569, 0.0764, 0.3097, 0.5429, 0.7760, 1.0090, 2.5820
				)
			);
			poses = new ArrayList(
				Arrays.asList(-0.0014, -0.0042, -0.0084, -0.0140, -0.0210, -0.0294, -0.0392, -0.0504, -0.0630, -0.0770, -0.0924, -0.1092, -0.1274, -0.1470, -0.1680, -0.1904, -0.2142, -0.2394, -0.2660, -0.2940, -0.3234, -0.3542, -0.3864, -0.4200, -0.4550, -0.4914, -0.5292, -0.5684, -0.6090, -0.6510, -0.6944, -0.7392, -0.7854, -0.8330, -0.8820, -0.9324, -0.9842, -1.0374, -1.0920, -1.1480, -1.2054, -1.2642, -1.3244, -1.3860, -1.4490, -1.5134, -1.5778, -1.6422, -1.7066, -1.7710, -1.8354, -1.8998, -1.9642, -2.0286, -2.0930, -2.1574, -2.2218, -2.2862, -2.3506, -2.4150, -2.4794, -2.5438, -2.6082, -2.6726, -2.7370, -2.8014, -2.8658, -2.9302, -2.9946, -3.0590, -3.1234, -3.1878, -3.2522, -3.3166, -3.3810, -3.4454, -3.5098, -3.5742, -3.6386, -3.7030, -3.7674, -3.8318, -3.8962, -3.9606, -4.0250, -4.0894, -4.1538, -4.2182, -4.2826, -4.3470, -4.4114, -4.4758, -4.5402, -4.6046, -4.6690, -4.7334, -4.7978, -4.8622, -4.9266, -4.9910, -5.0540, -5.1156, -5.1758, -5.2346, -5.2920, -5.3480, -5.4026, -5.4558, -5.5076, -5.5580, -5.6070, -5.6546, -5.7008, -5.7456, -5.7890, -5.8310, -5.8716, -5.9108, -5.9486, -5.9850, -6.0200, -6.0536, -6.0858, -6.1166, -6.1460, -6.1740, -6.2006, -6.2258, -6.2496, -6.2720, -6.2930, -6.3126, -6.3308, -6.3476, -6.3630, -6.3770, -6.3896, -6.4008, -6.4106, -6.4190, -6.4260, -6.4316, -6.4358, -6.4386, -6.4400, -6.4400
				)
			);
			vels = new ArrayList(
				Arrays.asList(-0.0700, -0.1400, -0.2100, -0.2800, -0.3500, -0.4200, -0.4900, -0.5600, -0.6300, -0.7000, -0.7700, -0.8400, -0.9100, -0.9800, -1.0500, -1.1200, -1.1900, -1.2600, -1.3300, -1.4000, -1.4700, -1.5400, -1.6100, -1.6800, -1.7500, -1.8200, -1.8900, -1.9600, -2.0300, -2.1000, -2.1700, -2.2400, -2.3100, -2.3800, -2.4500, -2.5200, -2.5900, -2.6600, -2.7300, -2.8000, -2.8700, -2.9400, -3.0100, -3.0800, -3.1500, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.2200, -3.1500, -3.0800, -3.0100, -2.9400, -2.8700, -2.8000, -2.7300, -2.6600, -2.5900, -2.5200, -2.4500, -2.3800, -2.3100, -2.2400, -2.1700, -2.1000, -2.0300, -1.9600, -1.8900, -1.8200, -1.7500, -1.6800, -1.6100, -1.5400, -1.4700, -1.4000, -1.3300, -1.2600, -1.1900, -1.1200, -1.0500, -0.9800, -0.9100, -0.8400, -0.7700, -0.7000, -0.6300, -0.5600, -0.4900, -0.4200, -0.3500, -0.2800, -0.2100, -0.1400, -0.0700, 0.0000
				)
			);
			angs = new ArrayList(
				Arrays.asList(-0.0129, -0.0121, -0.0109, -0.0094, -0.0074, -0.0048, -0.0019, 0.0013, 0.0047, 0.0087, 0.0133, 0.0181, 0.0232, 0.0285, 0.0343, 0.0406, 0.0471, 0.0538, 0.0608, 0.0681, 0.0759, 0.0836, 0.0917, 0.1002, 0.1088, 0.1175, 0.1263, 0.1353, 0.1445, 0.1538, 0.1632, 0.1726, 0.1820, 0.1916, 0.2010, 0.2106, 0.2200, 0.2293, 0.2386, 0.2479, 0.2568, 0.2657, 0.2744, 0.2829, 0.2913, 0.2993, 0.3070, 0.3142, 0.3210, 0.3275, 0.3336, 0.3393, 0.3447, 0.3496, 0.3542, 0.3584, 0.3623, 0.3659, 0.3692, 0.3721, 0.3746, 0.3768, 0.3787, 0.3803, 0.3816, 0.3825, 0.3832, 0.3835, 0.3835, 0.3831, 0.3825, 0.3816, 0.3803, 0.3787, 0.3768, 0.3746, 0.3720, 0.3691, 0.3658, 0.3622, 0.3583, 0.3541, 0.3495, 0.3445, 0.3392, 0.3334, 0.3273, 0.3209, 0.3140, 0.3068, 0.2991, 0.2911, 0.2825, 0.2736, 0.2642, 0.2545, 0.2441, 0.2335, 0.2222, 0.2105, 0.1986, 0.1866, 0.1744, 0.1620, 0.1495, 0.1371, 0.1242, 0.1118, 0.0991, 0.0865, 0.0740, 0.0617, 0.0491, 0.0371, 0.0250, 0.0131, 0.0017, -0.0096, -0.0207, -0.0318, -0.0423, -0.0523, -0.0622, -0.0718, -0.0808, -0.0897, -0.0982, -0.1062, -0.1136, -0.1211, -0.1279, -0.1341, -0.1400, -0.1456, -0.1505, -0.1552, -0.1592, -0.1628, -0.1662, -0.1688, -0.1712, -0.1732, -0.1745, -0.1752, -0.1759, -0.1759
				)
			);
			angVels = new ArrayList(
				Arrays.asList(-0.6469, 0.0439, 0.0585, 0.0730, 0.1020, 0.1308, 0.1448, 0.1587, 0.1724, 0.2002, 0.2276, 0.2403, 0.2528, 0.2649, 0.2906, 0.3155, 0.3261, 0.3364, 0.3462, 0.3686, 0.3900, 0.3850, 0.4050, 0.4239, 0.4295, 0.4344, 0.4387, 0.4539, 0.4564, 0.4692, 0.4698, 0.4697, 0.4688, 0.4771, 0.4742, 0.4799, 0.4657, 0.4693, 0.4627, 0.4636, 0.4468, 0.4455, 0.4352, 0.4241, 0.4190, 0.3994, 0.3861, 0.3605, 0.3416, 0.3229, 0.3043, 0.2860, 0.2679, 0.2459, 0.2324, 0.2114, 0.1945, 0.1778, 0.1637, 0.1444, 0.1280, 0.1099, 0.0957, 0.0796, 0.0635, 0.0475, 0.0311, 0.0158, -0.0002, -0.0162, -0.0315, -0.0479, -0.0639, -0.0800, -0.0961, -0.1104, -0.1284, -0.1448, -0.1641, -0.1782, -0.1950, -0.2118, -0.2329, -0.2464, -0.2683, -0.2864, -0.3048, -0.3233, -0.3421, -0.3610, -0.3866, -0.3999, -0.4266, -0.4471, -0.4678, -0.4887, -0.5183, -0.5316, -0.5622, -0.5847, -0.5974, -0.5991, -0.6094, -0.6186, -0.6269, -0.6228, -0.6403, -0.6214, -0.6369, -0.6270, -0.6282, -0.6153, -0.6276, -0.5985, -0.6090, -0.5910, -0.5715, -0.5652, -0.5581, -0.5503, -0.5267, -0.5019, -0.4916, -0.4806, -0.4535, -0.4413, -0.4287, -0.3996, -0.3698, -0.3719, -0.3413, -0.3102, -0.2951, -0.2798, -0.2477, -0.2318, -0.1992, -0.1830, -0.1667, -0.1336, -0.1171, -0.1005, -0.0670, -0.0335, -0.0336, 0.0000
				)
			);
		}
    }

    // Called repeatedly when this Command is scheduled to run
    int i = 0;
	boolean done = false;
	double deltaL, deltaR, deltaAng;
	double prevL = 0;
	double prevR = 0; //0.4787787m circum
	double prevAng = 0;
	public static double posError, velError, angError, angVelError;
	double drivenDistanceSensor = 0;
	double outputLeftVoltage, outputRightVoltage;

	protected void execute() {
		
    	if(i<voltagesRight.size()) {
			deltaL = Robot.getDtSubsystem().getLeftEncMeters() - prevL;
			deltaR = Robot.getDtSubsystem().getRightEncMeters() - prevR;
			deltaAng = Robot.getDtSubsystem().grabAngleRadians() - prevAng;
			//System.out.println(DD.composeTransformFromArcs(deltaL, deltaR).toText());
			drivenDistanceSensor += (deltaL + deltaR)/2;
			posError = poses.get(i) - (drivenDistanceSensor);
			velError = vels.get(i) - ((deltaL+deltaR)/2/dt);
			angError = angs.get(i) + Robot.getDtSubsystem().storedAngProfile - Robot.getDtSubsystem().grabAngleRadians();
			angVelError = angVels.get(i) - (deltaAng/dt);
			
			outputLeftVoltage = voltagesLeft.get(i) + this.kPPos*posError + kPVel*velError - this.kPAng*angError - kPAngVel*angVelError;
			outputRightVoltage = voltagesRight.get(i)+ this.kPPos*posError + kPVel*velError + this.kPAng*angError + kPAngVel*angVelError;
			//System.out.println(Robot.getDtSubsystem().grabAngleRadians());
			Robot.getDtSubsystem().voltageDrive(outputLeftVoltage , outputRightVoltage);
			//System.out.println("LF: "+RobotMap.PDP.getCurrent(0) + "\t" + "LB: "+RobotMap.PDP.getCurrent(1) + "\t" + "RF: "+RobotMap.PDP.getCurrent(15) + "\t" + "RB: "+ RobotMap.PDP.getCurrent(14));
			prevL = Robot.getDtSubsystem().getLeftEncMeters();
			prevR = Robot.getDtSubsystem().getRightEncMeters();
			prevAng = Robot.getDtSubsystem().grabAngleRadians();
    		i++;
    	}else {
    		Robot.getDtSubsystem().motorReset();
    		done = true;
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return done;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
